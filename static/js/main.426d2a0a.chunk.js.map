{"version":3,"sources":["components/LogIn/index.js","components/Header/index.js","components/Home/index.js","components/Profile/index.js","components/JobCard/index.js","components/Filter/index.js","components/Jobs/index.js","components/SimilarJob/index.js","components/Skills/index.js","components/JobDetails/index.js","components/NotFound/index.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["LogIn","state","username","password","showSubmitError","errorMsg","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","replace","onSubmitFailure","setState","submitForm","event","a","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","onChangeUsername","target","value","onChangePassword","renderPasswordField","className","htmlFor","type","id","placeholder","onChange","renderUsernameField","this","undefined","get","to","onSubmit","src","alt","Component","withRouter","onClickLogout","remove","onClick","Home","Profile","profiles","isLoading","profileList","profile","name","profileImageUrl","profile_image_url","shortBio","short_bio","getProfile","token","headers","Authorization","fetchedData","updatedData","profile_details","showProfile","JobCard","eachJobDetails","jobDescription","companyLogo","location","packages","rating","title","eType","jobId","Filter","eList","salaryList","onCheckSalary","onCheckEmp","eTypeValue","salaryValue","map","each","label","employmentTypeId","salaryRangeId","activeStatus","employmentTypesList","salaryRangesList","Jobs","jobsList","status","eL1","sL1","searchInput","empType","salary","Id","includes","genL","filter","genJ","join","getJobsList","push","dess","des","url","jobs","eachJob","job_description","company_logo_url","package","package_per_annum","employment_type","zeroList","onSuccess","length","onProgress","testid","color","height","width","retryButton","onFailure","LoadingContent","searchButton","onSearch","SimilarJob","similar","Skills","List1","skillList","getChange","imageUrl","image_url","JobDetails","similarJob","jobDetailsList","updateList","List","job_details","jobData","websiteUrl","company_website_url","package1","skills","life","life_at_company","similarList","similar_jobs","getList","match","params","console","log","href","description","onRetry","NotFound","ProtectedRoute","Cookie","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426d2a0a.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nimport {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass LogIn extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {expires: 3})\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    // console.log(response)\n    const data = await response.json()\n    // console.log(data)\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"password-input-field\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={this.onChangePassword}\n        />\n      </>\n    )\n  }\n\n  renderUsernameField = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"username-input-field\"\n          value={username}\n          placeholder=\"Username\"\n          onChange={this.onChangeUsername}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-form-container\">\n        <div>\n          <h1 className=\"hed\">Jobby</h1>\n          <p className=\"cap\"> FIND JOBS HERE WHAT YOU ARE LOOKING </p>\n        </div>\n\n        <form className=\"form-container\" onSubmit={this.submitForm}>\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            className=\"jobby-logo\"\n            alt=\"website logo\"\n          />\n          <div className=\"input-container\">{this.renderUsernameField()}</div>\n          <div className=\"input-container\">{this.renderPasswordField()}</div>\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n          {showSubmitError && <p className=\"error-message\">*$*{errorMsg} </p>}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn\n","import {Link, withRouter} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n  return (\n    <nav className=\"nav-header\">\n      <div className=\"nav-content\">\n        <ul>\n          <Link to=\"/\">\n            <li>\n              <img\n                className=\"website-logo\"\n                src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n                alt=\"website logo\"\n              />\n            </li>\n          </Link>\n        </ul>\n        <ul className=\"nav-menu\">\n          <li>\n            <Link to=\"/\" className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/jobs\" className=\"nav-link\">\n              Jobs\n            </Link>\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"logout-desktop-btn\"\n          onClick={onClickLogout}\n        >\n          Logout\n        </button>\n        <button\n          type=\"button\"\n          className=\"logout-mobile-btn\"\n          onClick={onClickLogout}\n        >\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-log-out-img.png\"\n            alt=\"logout icon\"\n            className=\"logout-icon\"\n          />\n        </button>\n      </div>\n    </nav>\n  )\n}\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\nimport Header from '../Header'\nimport './index.css'\n\nconst Home = () => (\n  <>\n    <div className=\"home-container\">\n      <Header />\n      <div className=\"home-content\">\n        <h1 className=\"home-heading\">Find The Job That Fits Your Life</h1>\n        <p className=\"home-description\">\n          Millions of people are searching for jobs, salary information, company\n          reviews. Find the job that fits your abilities and potential.\n        </p>\n        <Link to=\"/jobs\">\n          <button type=\"button\" className=\"shop-now-button\">\n            FIND JOBS\n          </button>\n        </Link>\n      </div>\n    </div>\n  </>\n)\n\nexport default Home\n","import Cookies from 'js-cookie'\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass Profile extends Component {\n  state = {\n    profiles: '',\n    isLoading: false,\n  }\n\n  componentDidMount() {\n    this.getProfile()\n  }\n\n  profileList = profile => ({\n    name: profile.name,\n    profileImageUrl: profile.profile_image_url,\n    shortBio: profile.short_bio,\n  })\n\n  getProfile = async () => {\n    const token = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/profile`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const response = await fetch(url, options)\n    // console.log(response)\n    if (response.ok === true) {\n      const fetchedData = await response.json()\n      const updatedData = this.profileList(fetchedData.profile_details)\n      this.setState({profiles: updatedData, isLoading: true})\n    }\n  }\n\n  showProfile = () => {\n    this.getProfile()\n  }\n\n  render() {\n    const {profiles, isLoading} = this.state\n    const {name, profileImageUrl, shortBio} = profiles\n    return isLoading ? (\n      <div className=\"profile\">\n        <img className=\"profile-pic\" src={profileImageUrl} alt=\"profile\" />\n        <h1 className=\"name\">{name}</h1>\n        <p className=\"bio\">{shortBio}</p>\n      </div>\n    ) : (\n      <div className=\"retry\">\n        <button className=\"Retry\" type=\"button\" onClick={this.showProfile}>\n          Retry\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","import {Link} from 'react-router-dom'\nimport {BsStar, BsBag} from 'react-icons/bs'\nimport {GoLocation} from 'react-icons/go'\nimport './index.css'\n\nconst JobCard = props => {\n  const {eachJobDetails} = props\n  const {\n    jobDescription,\n    companyLogo,\n    location,\n    packages,\n    rating,\n    title,\n    eType,\n    jobId,\n  } = eachJobDetails\n  return (\n    <Link to={`/jobs/${jobId}`} className=\"Link1\">\n      <li className=\"job-card0\">\n        <div className=\"top-card\">\n          <img src={companyLogo} alt=\"company logo\" className=\"company-logo\" />\n          <div className=\"title\">\n            <h1 className=\"title-font\">{title}</h1>\n            <div className=\"row\">\n              <p className=\"rating\">\n                <BsStar className=\"star\" />\n                {rating}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"font-cont\">\n          <div className=\"row\">\n            <div>\n              <p className=\"fonts\">\n                <GoLocation className=\"font\" />\n                {location}\n              </p>\n            </div>\n            <div>\n              <p className=\"fonts\">\n                <BsBag className=\"font\" /> {eType}\n              </p>\n            </div>\n          </div>\n          <div className=\"package\">{packages}</div>\n        </div>\n        <hr className=\"line-job\" />\n        <h1 className=\"des-name\">Description</h1>\n        <p className=\"job-para\">{jobDescription}</p>\n      </li>\n    </Link>\n  )\n}\n\nexport default JobCard\n","import './index.css'\n\nconst Filter = props => {\n  const {\n    eList,\n    salaryList,\n    onCheckSalary,\n    onCheckEmp,\n    eTypeValue,\n    salaryValue,\n  } = props\n\n  const typeOfEmployment = () => (\n    <ul className=\"employ-class\">\n      {eList.map(each => {\n        const {label, employmentTypeId} = each\n        const onCheck2 = () => {\n          onCheckEmp(employmentTypeId)\n        }\n        return (\n          <li className=\"check-box\" key={employmentTypeId}>\n            <input\n              id={employmentTypeId}\n              type=\"checkbox\"\n              value={eTypeValue}\n              onClick={onCheck2}\n            />\n            <label htmlFor={employmentTypeId} className=\"label\">\n              {label}\n            </label>\n          </li>\n        )\n      })}\n    </ul>\n  )\n\n  const salaryRange = () => (\n    <ul className=\"employ-class\">\n      {salaryList.map(each => {\n        const {label, salaryRangeId} = each\n        const onCheck = () => {\n          onCheckSalary(salaryRangeId)\n        }\n\n        return (\n          <li className=\"check-box\" key={salaryRangeId}>\n            <input\n              id={salaryRangeId}\n              type=\"radio\"\n              value={salaryValue}\n              onClick={onCheck}\n            />\n            <label htmlFor={salaryRangeId} className=\"label\">\n              {label}\n            </label>\n          </li>\n        )\n      })}\n    </ul>\n  )\n\n  return (\n    <div className=\"filter-cont\">\n      <h1 className=\"filter-head\">Type of Employment</h1>\n      {typeOfEmployment()}\n      <hr className=\"line-filter\" />\n      <h1 className=\"filter-head\">Salary Range</h1>\n      {salaryRange()}\n    </div>\n  )\n}\n\nexport default Filter\n","import Cookies from 'js-cookie'\nimport {Component} from 'react'\nimport {BsSearch} from 'react-icons/bs'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport Profile from '../Profile'\nimport JobCard from '../JobCard'\nimport Filter from '../Filter'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst activeStatus = {\n  Initial: 'Initial',\n  progress: 'progress',\n  success: 'success',\n  failure: 'failure',\n}\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nclass Jobs extends Component {\n  state = {\n    jobsList: '',\n    status: 'Initial',\n    eL1: [],\n    sL1: [],\n    searchInput: '',\n    empType: '',\n    salary: '',\n  }\n\n  componentDidMount() {\n    this.getJobsList()\n  }\n\n  onCheckSalary = Id => {\n    const {sL1} = this.state\n    if (sL1.includes(Id)) {\n      const genL = sL1.filter(each => each !== Id)\n      const genJ = genL.join(',')\n\n      this.setState({salary: genJ, sL1: genL}, this.getJobsList)\n    } else {\n      sL1.push(Id)\n      const dess = sL1.join(',')\n      this.setState({salary: dess, sL1}, this.getJobsList)\n    }\n  }\n\n  onCheckEmp = Id => {\n    const {eL1} = this.state\n    if (eL1.includes(Id)) {\n      const genL = eL1.filter(each => each !== Id)\n      const genJ = genL.join(',')\n      this.setState({empType: genJ, eL1: genL}, this.getJobsList)\n    } else {\n      eL1.push(Id)\n      const des = eL1.join(',')\n      this.setState({empType: des, eL1}, this.getJobsList)\n    }\n  }\n\n  getJobsList = async () => {\n    this.setState({status: activeStatus.progress})\n    const {searchInput, salary, empType} = this.state\n    const token = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs?employment_type=${empType}&minimum_package=${salary}&search=${searchInput}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const response = await fetch(url, options)\n    // console.log(response)\n    if (response.ok === true) {\n      const fetchedData = await response.json()\n      // console.log(fetchedData)\n      const updatedData = fetchedData.jobs.map(eachJob => ({\n        jobDescription: eachJob.job_description,\n        companyLogo: eachJob.company_logo_url,\n        location: eachJob.location,\n        package: eachJob.package_per_annum,\n        rating: eachJob.rating,\n        title: eachJob.title,\n        eType: eachJob.employment_type,\n        jobId: eachJob.id,\n      }))\n      // console.log(data)\n      this.setState({jobsList: updatedData, status: activeStatus.success})\n    } else {\n      this.setState({status: activeStatus.failure})\n    }\n  }\n\n  zeroList = () => (\n    <div className=\"failure\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n        alt=\"no jobs\"\n      />\n      <h1>No Jobs Found</h1>\n      <p>We could not find any jobs. Try other filters</p>\n    </div>\n  )\n\n  onSuccess = () => {\n    const {jobsList} = this.state\n    if (jobsList.length === 0) {\n      return this.zeroList()\n    }\n    return (\n      <ul>\n        {jobsList.map(eachJob => (\n          <JobCard key={eachJob.id} eachJobDetails={eachJob} />\n        ))}\n      </ul>\n    )\n  }\n\n  onProgress = () => (\n    <div testid=\"loader\" className=\"loader-container\">\n      <Loader type=\"ThreeDots\" color=\"blue\" height={50} width={50} />\n    </div>\n  )\n\n  retryButton = () => this.getJobsList()\n\n  onFailure = () => (\n    <div className=\"failure\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1>Oops! Something Went Wrong</h1>\n      <p>we cannot seem to find the page you are looking for </p>\n      <div className=\"retry\">\n        <button className=\"Retry\" type=\"button\" onClick={this.retryButton}>\n          Retry\n        </button>\n      </div>\n    </div>\n  )\n\n  LoadingContent = () => {\n    const {status} = this.state\n    switch (status) {\n      case 'success':\n        return this.onSuccess()\n      case 'failure':\n        return this.onFailure()\n      case 'progress':\n        return this.onProgress()\n      default:\n        return null\n    }\n  }\n\n  searchButton = () => {\n    this.getJobsList()\n  }\n\n  onSearch = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  render() {\n    const {searchInput, salaryValue, eTypeValue} = this.state\n    return (\n      <>\n        <div className=\"jobs-main-container\">\n          <Header />\n          <div className=\"jobs-home-content\">\n            <div className=\"left-side-card\">\n              <div>\n                <Profile />\n                <hr />\n              </div>\n              <div>\n                <Filter\n                  eList={employmentTypesList}\n                  salaryList={salaryRangesList}\n                  onCheckEmp={this.onCheckEmp}\n                  onCheckSalary={this.onCheckSalary}\n                  eTypeValue={eTypeValue}\n                  salaryValue={salaryValue}\n                />\n              </div>\n            </div>\n            <div className=\"right-side-card\">\n              <div className=\"search\">\n                <input\n                  type=\"search\"\n                  placeholder=\"search\"\n                  className=\"search-input\"\n                  value={searchInput}\n                  onChange={this.onSearch}\n                />\n                <button\n                  type=\"button\"\n                  testid=\"searchButton\"\n                  className=\"search-but\"\n                  onClick={this.searchButton}\n                >\n                  <BsSearch className=\"search-icon\" />\n                </button>\n              </div>\n              <div job-cards>\n                <div>{this.LoadingContent()}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Jobs\n","import {BsStar, BsBag} from 'react-icons/bs'\nimport {GoLocation} from 'react-icons/go'\nimport './index.css'\n\nconst SimilarJob = props => {\n  const {similar} = props\n  const {companyLogo, jobDescription, rating, title, location, eType} = similar\n\n  return (\n    <li className=\"job-card\">\n      <div className=\"top-card\">\n        <img\n          src={companyLogo}\n          alt=\"similar job company logo\"\n          className=\"company-logo\"\n        />\n        <div className=\"title\">\n          <h1>{title}</h1>\n          <div>\n            <BsStar className=\"star\" />\n            <p className=\"rating\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"des-name\">Description</h1>\n      <p className=\"job-para\">{jobDescription}</p>\n      <div className=\"row-s\">\n        <div className=\"row-s\">\n          <GoLocation />\n          <p>{location}</p>\n        </div>\n        <div className=\"row-s\">\n          <BsBag />\n          <p>{eType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJob\n","import './index.css'\n\nconst Skills = props => {\n  const {skillList} = props\n\n  const change = List1 => ({\n    name: List1.name,\n    imageUrl: List1.image_url,\n  })\n\n  const getChange = change(skillList)\n  const {imageUrl, name} = getChange\n  return (\n    <li className=\"row1\">\n      <img src={imageUrl} alt={name} className=\"skill-img\" />\n      <p className=\"life-content\">{name}</p>\n    </li>\n  )\n}\n\nexport default Skills\n","import Cookies from 'js-cookie'\nimport {Component} from 'react'\n// import {Link} from 'react-router-dom'\nimport Loader from 'react-loader-spinner'\nimport {BsStar, BsBag} from 'react-icons/bs'\nimport {GoLocation} from 'react-icons/go'\nimport {RiExternalLinkFill} from 'react-icons/ri'\nimport Header from '../Header'\nimport SimilarJob from '../SimilarJob'\nimport Skills from '../Skills'\nimport './index.css'\n\nconst activeStatus = {\n  Initial: 'Initial',\n  progress: 'progress',\n  success: 'success',\n  failure: 'failure',\n}\n\nclass JobDetails extends Component {\n  state = {similarJob: '', jobDetailsList: '', status: activeStatus.Initial}\n\n  componentDidMount() {\n    this.getList()\n  }\n\n  updateList = data => {\n    const List = data.job_details\n\n    const jobData = {\n      companyLogo: List.company_logo_url,\n      websiteUrl: List.company_website_url,\n      eType: List.employment_type,\n      id: List.id,\n      jobDescription: List.job_description,\n      location: List.location,\n      package1: List.package_per_annum,\n      rating: List.rating,\n      title: List.title,\n      skills: List.skills,\n      life: List.life_at_company,\n    }\n\n    const similarList = data.similar_jobs.map(each => ({\n      companyLogo: each.company_logo_url,\n      id: each.id,\n      jobDescription: each.job_description,\n      rating: each.rating,\n      title: each.title,\n      location: each.location,\n      eType: each.employment_type,\n    }))\n\n    this.setState({\n      jobDetailsList: jobData,\n      status: activeStatus.success,\n      similarJob: similarList,\n    })\n  }\n\n  getList = async () => {\n    this.setState({status: activeStatus.progress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const token = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    console.log(response)\n    if (response.ok === true) {\n      const data = await response.json()\n      this.updateList(data)\n    } else {\n      this.setState({status: activeStatus.failure})\n    }\n  }\n\n  onProgress = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  onSuccess = () => {\n    const {jobDetailsList, similarJob} = this.state\n    const {\n      companyLogo,\n      eType,\n      websiteUrl,\n      jobDescription,\n      location,\n      package1,\n      rating,\n      title,\n      skills,\n      life,\n    } = jobDetailsList\n    return (\n      <div className=\"similar-page2\">\n        <div className=\"job-card-detail\">\n          <div className=\"top-card\">\n            <img\n              src={companyLogo}\n              alt=\"job details company logo\"\n              className=\"company-logo\"\n            />\n            <div className=\"title\">\n              <h1 className=\"title-font\">{title}</h1>\n              <div className=\"row\">\n                <p className=\"rating\">\n                  <BsStar className=\"star\" />\n                  {rating}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"font-cont\">\n            <div className=\"row\">\n              <div>\n                <p className=\"fonts\">\n                  <GoLocation className=\"font\" />\n                  {location}\n                </p>\n              </div>\n              <div>\n                <p className=\"fonts\">\n                  <BsBag className=\"font\" /> {eType}\n                </p>\n              </div>\n            </div>\n            <p className=\"package\">{package1}</p>\n          </div>\n          <hr className=\"line-job\" />\n          <div className=\"row-link\">\n            <h1 className=\"des-name\">Description</h1>\n            <a href={websiteUrl} className=\"row-link\">\n              Visit\n              <RiExternalLinkFill />\n            </a>\n          </div>\n          <p className=\"job-para\">{jobDescription}</p>\n          <h1 className=\"skill-head\">Skills</h1>\n          <ul className=\"skill-cont\">\n            {skills.map(each => (\n              <Skills skillList={each} key={each.name} />\n            ))}\n          </ul>\n          <h1 className=\"skill-head\">Life at Company</h1>\n          <div className=\"life-row\">\n            <p className=\"life-content\">{life.description}</p>\n            <img\n              src={life.image_url}\n              alt=\"life at company\"\n              className=\"company-img\"\n            />\n          </div>\n        </div>\n\n        <h1 className=\"job-head\">Similar jobs</h1>\n\n        <ul className=\"similar-cont\">\n          {similarJob.map(each => (\n            <SimilarJob similar={each} key={each.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  onRetry = () => this.getList()\n\n  onFailure = () => (\n    <div className=\"failure\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1>Oops! Something Went Wrong</h1>\n      <p className=\"warning\">\n        we cannot seem to find the page you are looking for{' '}\n      </p>\n\n      <button type=\"button\" onClick={this.onRetry} className=\"retry-but\">\n        Retry\n      </button>\n    </div>\n  )\n\n  LoadingContent = () => {\n    const {status} = this.state\n\n    switch (status) {\n      case 'success':\n        return this.onSuccess()\n      case 'failure':\n        return this.onFailure()\n      case 'progress':\n        return this.onProgress()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    // const {jobDetailsList} = this.state\n    return (\n      <div className=\"detail-cont\">\n        <Header />\n        {this.LoadingContent()}\n      </div>\n    )\n  }\n}\n\nexport default JobDetails\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <div className=\"not-card\">\n      <img\n        className=\"notFoundImg\"\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n      />\n      <h1>Page Not Found</h1>\n      <p className=\"warn\">\n        We’re sorry, the page you requested could Not Be Found\n      </p>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Route, Switch, Redirect} from 'react-router-dom'\n\nimport LogIn from './components/LogIn'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport JobDetails from './components/JobDetails'\nimport NotFound from './components/NotFound'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={LogIn} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobDetails} />\n    <Route exact path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}